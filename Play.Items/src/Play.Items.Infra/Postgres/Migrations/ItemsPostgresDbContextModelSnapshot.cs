// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Play.Items.Infra.Postgres;

#nullable disable

namespace Play.Items.Infra.Postgres.Migrations
{
    [DbContext(typeof(ItemsPostgresDbContext))]
    partial class ItemsPostgresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("play.items")
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Play.Items.Domain.Entities.Crafter", b =>
                {
                    b.Property<Guid>("CrafterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CrafterId");

                    b.ToTable("Crafters", "play.items");
                });

            modelBuilder.Entity("Play.Items.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CrafterId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CrafterId");

                    b.ToTable("Items", "play.items");
                });

            modelBuilder.Entity("Play.Items.Domain.Entities.Item", b =>
                {
                    b.HasOne("Play.Items.Domain.Entities.Crafter", "Crafter")
                        .WithMany("Items")
                        .HasForeignKey("CrafterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crafter");
                });

            modelBuilder.Entity("Play.Items.Domain.Entities.Crafter", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
