// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Play.Items.Infra.Postgres;

#nullable disable

namespace Play.Items.Infra.Postgres.Migrations
{
    [DbContext(typeof(ItemsPostgresDbContext))]
    [Migration("20250211201737_SeedCrafters")]
    partial class SeedCrafters
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("play.items")
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CrafterSkill", b =>
                {
                    b.Property<Guid>("CrafterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SkillsSkillId")
                        .HasColumnType("uuid");

                    b.HasKey("CrafterId", "SkillsSkillId");

                    b.HasIndex("SkillsSkillId");

                    b.ToTable("CrafterSkill", "play.items");
                });

            modelBuilder.Entity("Play.Items.Domain.Entities.Crafter", b =>
                {
                    b.Property<Guid>("CrafterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CrafterId");

                    b.ToTable("Crafters", "play.items");

                    b.HasData(
                        new
                        {
                            CrafterId = new Guid("b69f5ef7-bf93-4de2-a62f-064652d8dd19"),
                            Name = "Din Foo"
                        },
                        new
                        {
                            CrafterId = new Guid("33364e25-6544-48bd-b87d-37760ee27911"),
                            Name = "Arrgond"
                        },
                        new
                        {
                            CrafterId = new Guid("8ce6633f-c318-4017-acef-369b86fd981d"),
                            Name = "Bleatcher"
                        });
                });

            modelBuilder.Entity("Play.Items.Domain.Entities.Element", b =>
                {
                    b.Property<Guid>("ElementId")
                        .HasColumnType("uuid");

                    b.Property<string>("ElementName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ElementId");

                    b.ToTable("Elements", "play.items");
                });

            modelBuilder.Entity("Play.Items.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CrafterId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ElementId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CrafterId");

                    b.HasIndex("ElementId");

                    b.ToTable("Items", "play.items");
                });

            modelBuilder.Entity("Play.Items.Domain.Entities.Skill", b =>
                {
                    b.Property<Guid>("SkillId")
                        .HasColumnType("uuid");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SkillId");

                    b.ToTable("Skills", "play.items");

                    b.HasData(
                        new
                        {
                            SkillId = new Guid("9366cd4d-1615-47cb-ba90-695c46814a83"),
                            SkillName = "Forging"
                        },
                        new
                        {
                            SkillId = new Guid("c12b527c-8b5b-4344-94b0-76e65ccc6a78"),
                            SkillName = "Mixing"
                        },
                        new
                        {
                            SkillId = new Guid("e5f4a62c-8f49-49d3-b9a4-9e89acd685fa"),
                            SkillName = "Weaving"
                        },
                        new
                        {
                            SkillId = new Guid("e9c81cb6-810a-439c-bb9f-aaea0b4bcd77"),
                            SkillName = "Griding"
                        });
                });

            modelBuilder.Entity("CrafterSkill", b =>
                {
                    b.HasOne("Play.Items.Domain.Entities.Crafter", null)
                        .WithMany()
                        .HasForeignKey("CrafterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Play.Items.Domain.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Play.Items.Domain.Entities.Item", b =>
                {
                    b.HasOne("Play.Items.Domain.Entities.Crafter", "Crafter")
                        .WithMany("Items")
                        .HasForeignKey("CrafterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Play.Items.Domain.Entities.Element", "Element")
                        .WithMany()
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crafter");

                    b.Navigation("Element");
                });

            modelBuilder.Entity("Play.Items.Domain.Entities.Crafter", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
